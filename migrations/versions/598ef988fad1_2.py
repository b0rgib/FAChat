"""2

Revision ID: 598ef988fad1
Revises: fb142ea4d80a
Create Date: 2023-02-16 21:02:24.896132

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '598ef988fad1'
down_revision = 'fb142ea4d80a'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Message')
    op.drop_table('Group')
    op.add_column('User', sa.Column('hashed_password', sa.String(length=1024), nullable=False))
    op.add_column('User', sa.Column('is_active', sa.Boolean(), nullable=False))
    op.add_column('User', sa.Column('is_superuser', sa.Boolean(), nullable=False))
    op.add_column('User', sa.Column('is_verified', sa.Boolean(), nullable=False))
    op.drop_constraint('User_email_key', 'User', type_='unique')
    op.drop_constraint('User_username_key', 'User', type_='unique')
    op.create_index(op.f('ix_User_email'), 'User', ['email'], unique=True)
    op.drop_column('User', 'username')
    op.drop_column('User', 'password')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('User', sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('User', sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_User_email'), table_name='User')
    op.create_unique_constraint('User_username_key', 'User', ['username'])
    op.create_unique_constraint('User_email_key', 'User', ['email'])
    op.drop_column('User', 'is_verified')
    op.drop_column('User', 'is_superuser')
    op.drop_column('User', 'is_active')
    op.drop_column('User', 'hashed_password')
    op.create_table('Group',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Group_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('admin', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['admin'], ['User.id'], name='Group_admin_fkey'),
    sa.PrimaryKeyConstraint('id', name='Group_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('Message',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Message_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('text', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['Group.id'], name='Message_group_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], name='Message_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='Message_pkey')
    )
    # ### end Alembic commands ###
